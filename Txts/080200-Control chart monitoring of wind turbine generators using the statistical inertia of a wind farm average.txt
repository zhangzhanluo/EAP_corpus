

Keywords:
Wind turbine monitoring Wind farm monitoring SCADA data
Fault detection Condition monitoring Performance evaluation
Abstract

The monitoring of wind turbines using SCADA data has received lately a growing interest from the fault diagnosis community because of the very low cost of these data, which are available in number without the need for any additional sensor. Yet, these data are highly variable due to the turbine constantly changing its operating conditions and to the rapid fluctuations of the environmental conditions (wind speed and direction, air density, turbulence, . . . ). This makes the occurrence of a fault difficult to detect. To address this problem, we propose a multi-level (turbine and farm level) strategy combining a mono- and a multi-turbine approach to create fault indicators insensitive to both operating and environmental conditions. At the turbine level, mono-turbine residuals (i.e. a difference between an actual monitored value and the predicted one) obtained with a normal behavior model expressing the causal relations between variables from the same single turbine and learnt during a normal condition period are calculated for each turbine, so as to get rid of the influence of the operating conditions. At the farm level, the residuals are then compared to a wind farm reference in a multi-turbine approach to obtain fault indicators insensitive to environmental conditions. Indicators for the objective performance evaluation are also proposed to compare wind turbine fault detection methods, which aim at evaluating the cost/benefit of the methods from a production manager¡¯s point of view. The performance of the proposed combined mono- and multi-turbine method is evaluated and compared to more classical methods proposed in the literature on a large real data set made of SCADA data recorded on a French wind farm during four years
: it is shown than it can improve the fault detection performance when compared to a residual analysis
limited at the turbine level only.

Introduction

Renewable energy has been a growing sector for several years, because of the necessity to reduce CO2 emission in the near fu- ture. The electrical power produced by wind turbines has been multiplied by 10 in the last 10 years. A significant amount of the electricity consumed in the world now relies on the electric power produced by wind farms, which have to be operational all along the year. Failures may cause important production losses, mainly due to the damages they cause and the time it takes to repair, which are no longer acceptable. This calls for a drastic change  in maintenance solutions, which must switch from periodic and corrective to condition-based. One of the motivations, and a per- spective, for the work presented in this paper is to develop a fault detection procedure that can deliver information on a developing fault early enough so that it can be used for condition-based or predictive maintenance decision making: indeed an in-advance detection allows the maintenance decision-maker to better plan the maintenance operations.
From the sensor technology point of view, 3 technologies are possible to monitor a wind turbine, [1]:
Using high rate data from a Condition Monitoring System (CMS) monitoring e.g. vibration: the use of these data  for fault detection usually relies on signal processing methods aiming at identifying the signature of a fault, e.g. in the signal spectrum;
Medium rate 1-second SCADA data: these data can be used for fault detection using for example model-based fault de- tection and isolation (FDI) methods, [2];
Slow rate 10-minutes averaged SCADA data: in this case, the measured quantities are averaged on 10-minutes length windows.
Several condition monitoring systems (CMS) are available on the market [1,3¨C5]. They are based on vibration analysis for the most part. They require additional sensors to be placed on each nacelle to measure the vibrations of several components of the drive train. The highly sampled acceleration signals they produce must be analyzed by an expert using signal processing methods, so as to detect faults in progress. Indeed, the automatic decision systems developed still generate a high number of false alarms. These make them a costly solution to implement [6,7].
On the opposite, SCADA systems have been integrated in wind farms since the emergence of wind energy. They generate loads of cheap data containing useful information on the turbines state but the data low sampling rate, one average measure every 10 min, is not adapted to an accurate in-depth monitoring of wind turbines. However, their availability for free and the breadth of SCADA data scope have encouraged researchers to propose solutions to create SCADA based fault indicators [1,8]. The work presented in this paper is developed for 10-minutes averaged SCADA, classically recorded for production supervision purposes.
SCADA data monitoring relies on the numerous variables mea- sured mainly for production supervision purposes. Fault moni- toring approaches based on SCADA data differ in the way the data can be merged to synthesize a fault indicator residual, and can be categorized in ¡®¡®mono-turbine methods¡¯¡¯ or ¡®¡®multi-turbine methods¡¯¡¯, as proposed in [9]. Mono-turbine methods combine variables recorded on a unique wind turbine while multi-turbine methods combine variables coming from all the turbines within a wind farm or subset of a wind farm. In this work, it is proposed to use 10-minutes SCADA data in an innovative way, combining a mono-turbine (or turbine-level) and a multi-turbine (or farm- level) information processing.
Wind turbines SCADA variables are highly non-stationary be- cause of the frequent changes in operational conditions and of the variations in external conditions. Following a classical diagnosis approach [2], mono-turbine methods aim at explaining a SCADA variable evolution as a function of other SCADA variables recorded on the same turbine and thus generate residuals (unexplained part) for diagnosis purposes. Variables may be linked by causal relations
- a change in some variables induces a change in other variables-  or by similarity relations two variables evolve in the same way because they are submitted to the same excitations, [9]. The most common causal model in wind energy is the power curve [1], which expresses the link between the wind speed and the active power produced by the turbine. It can be used as a visualization tool by comparing the power curve built with data gathered during the current period with the reference curve provided by the construc- tor [10]. It can also be used to create fault indicators by measuring the difference between the produced power and its value predicted by a model using the wind speed. In order to reduce the dispersion of the power data, additional input variables may be added such as the air density, the wind direction [8,11,12], the rotational speed or the pitch angle [13]. The model may be a simple polynomial approximation, a Gaussian process model or an artificial neural network [14]. The fault indicators may be the difference at each sampling time between the measured power and the expected power or it can be a distance between a reference power curve and an on line curve built with the most current measures [8]. The limitation of this approach comes mainly from (i) the length of the training period, which has to be large in order to cover  all the wind speed and temperature ranges, and (ii) the difficulty to localize the fault once it is detected with the power curve. To address the localization issue, one solution is to split the wind turbine into smaller independent systems, such as the rotor, the gearbox, the generator, the transformer and the convertor and to build models of these reduced systems, [15,16]. One popular variable to be modeled is the temperature of some components, whose variations can be explained by changes in the operational conditions or in the outside temperature. Models explaining the temperature variations use at least the produced power, the na- celle temperature and the train rotation speed as input variables. They are learnt on data measured when the turbine operates in normal conditions. The fault indicator is defined as the difference between the actual measured temperature and the expected tem- perature, named residual. Models may be static, i.e. they use data measured at one sampling time [17,18] or dynamic, such as ARX models [19,20]. They can be simple linear regression models or more complex artificial neural networks [21¨C25]. Let note at this point that several published works follow a classical model-based fault detection and isolation approach (model-based FDI) to build fault indicators sensitive to faults, but robust to disturbances, for wind turbine monitoring, [26¨C30]. In these works, the residuals are built using state observers or parity equations, [2]. The proposed methods are usually implemented on wind turbine benchmarks, emulated by differential equations models where different faults can be simulated. They use high frequency SCADA data, recorded every second. Though the results obtained are very interesting, the problem addressed in these works is very different in nature from the one addressed in the present paper where 10-minutes SCADA data are used and the methods are validated on real data.
Another approach is to model the temperature of one com- ponent as a function of the temperature of some other reference components that should evolve in a similar way, such as the tem- peratures of two bearings but also the bearing temperature and the stator temperature [18] or the temperature of the hydraulic break and the bearing temperature [31]. Such models using similarity may be simpler than models using causal relations but they rely on two temperatures evolving in the same way.
Mono-turbine approaches merge variables from the same wind turbine to generate fault indicator residuals that are insensitive to changes in its operational conditions. However, these residuals remain sensitive to the variations in the external environment such as the wind direction, air humidity and so on. On the op- posite, multi-turbines approaches merge variables recorded from different turbines of the same wind farm in order to reduce the influence of the environmental conditions. Indeed, turbines of the same farm are submitted to the same weather conditions so variables should evolve in a similar way, somehow. [32] compares the behavior of different turbines in the same farm using curves displaying the temperature of a drive train bearing as a function of the produced power. The temperatures and powers are measured during a period of time and the curves from all the turbines are plot on the same graph. Faults can be identified visually when one of the curves deviates from the others. [10] measures the difference between the power curve given by the manufacturer and an actual power curve built using data gathered during a current period of time. The difference between the two curves can exhibit a loss in performance. The differences measured for all the turbines in the farm are compared one with each other to detect a turbine with a larger loss of performance, which can be due to a fault. [33] compares the evolution in time of the temperature of a component normalized by the external temperature for turbines from the same farm. The deviation of the temperature of one turbine from the others can be the symptom of a fault. [17] builds residuals from the differences in the normalized temperatures and concludes that changes in operational conditions can create themselves fluctua- tions that are too large to allow for reliable fault detection.
The literature review shows that most authors proposed meth- ods to build fault indicators using mono-turbine approaches and so get rid of the influence of the operating conditions on the fault indicators. Few authors adopt a multi-turbine approach that allows getting rid of the influence of the external conditions, and mostly as a visualization tool. A method to synthesize a fault indicator for each turbine in a farm by comparing the temperature measured on a turbine to a farm reference (average or median of temper- atures measured on all the turbines within the farm) has been proposed in [34] and used in [35] on other types of measured SCADA variables. It has been shown that such an indicator remains sensitive to the operating conditions, which can be different from one turbine to another. Hence, no solution able to get rid of the influence of both the operating conditions and external environ- ment has been proposed thus far. Moreover, as stated by [36],  in their extensive review on wind turbines condition monitoring using SCADA data, there is a lack of published performance metrics to properly evaluate the advantage of one method from the others in terms of false alarm, true failure prediction and normal behavior prediction. To address these issues and fill this gap, we propose in this paper a hybrid multi-level synthesis method to take benefits of both approaches ¨C mono- and multi-turbine ¨C and to build fault indicators combining the two approaches. At the turbine level, residuals obtained with a mono-turbine model learnt during a normal condition period are first calculated for each turbine. At the farm level, these residuals are compared to a wind farm residual reference, in a multi-turbine approach. The use of mono- turbine residuals enables the influence of the operating conditions to be reduced while the use of a wind farm reference enables the changes in the environmental conditions to be accounted for. The performance of the method proposed is evaluated and compared to methods proposed in the literature on a large data set made of SCADA data recorded on a French wind farm during four years. Objective performance evaluation metrics are also proposed to compare the methods, which aim at evaluating the cost/benefit of the methods from a production manager¡¯s point of view. Fault indicators should warn of a progressing fault early enough for a maintenance operation to be scheduled. However, they should not generate false alarms with the extra cost of sending a maintenance operator team on a remote site for no reason.
The contribution of the work presented in this paper is then
twofold:
The first and main contribution of the hybrid multi-level approach proposed in this paper lies in the online real-time comparison of the prediction residual computed on one tur- bine (i.e. at the turbine level, using a turbine normal behavior model) to a farm-level reference prediction residual, com- puted using the prediction residuals from the neighbor wind turbines. This approach is said ¡®¡®hybrid multi-level¡¯¡¯ because

Second, the other contributions of the work presented in this paper are (i) the definition of objective performance metrics for the fault detection consistent with the applicative requirements of a wind farm manager and (ii) using these performance metrics, the evaluation of the proposed fault detection approach on a 4 years real data base from wind farm with 6 turbines, which shows that it has better performance than a residual analysis limited at the turbine level only.
The outline of this paper is as follows. Section 2 first presents different possible methods for the generation of fault indicators and focuses on the proposed combined mono- and multi-turbine approach developed in this work. The objective performance met- rics considered for the evaluation of the fault detection perfor- mance are also detailed in this section. The data set used to analyze the performances is described in Section 3 followed by a presenta- tion and a discussion of the results obtained.

2. Method
This section presents the proposed two-levels methodology to synthesize fault indicators by combining both a mono-turbine and a multi-turbine approach. Each of the two levels is described: synthesis of the fleet reference at the farm-level, and elaboration of a relevant turbine-level variable for comparison to the fleet reference. Finally, the performance evaluation metrics, which are used latter in Section 3 to compare the obtained fault detection results with different fault indicators, are introduced.
2.1. Fault indicators synthesis

2.1.1. Farm-level: comparison of the turbine variables to a fleet refer- ence
In wind farms, turbines are part of a fleet: they are of the same make and are subject to the same environmental conditions (wind speed, external temperatures, . . . ). Thus, the SCADA variables monitored on turbines from the same farm should evolve in a similar way when the turbines operate under normal conditions. The rationale for the method proposed in this paper relies on this assumption. SCADA variables from different turbines are compared on line. A deviation between a variable computed from a turbine and a farm reference is an indicator of an abnormal behavior. Its general concept is presented in Fig. 1.
 SCADA variables or model residuals computed from SCADA variables are recorded on line, averaged over a given time period and compared to a fleet reference. The distance between the vari- able monitored on a wind turbine and the fleet reference serves as a fault indicator for the turbine.
Let V be a variable measured on a wind turbine or a model residual synthesized on a wind turbine. V is assumed to carry in- formation on the turbine deterioration, and several ways to choose this variable V are considered in Section 2.1.2. Vj(k) is the value of the variable V from turbine j at time k. Let NT be the number of turbines in the wind farm. Let Win be an analysis window of size W . For each turbine j, with j varying from 1 to NT , a fault indicator Fj(k) is built at time k, as follows:
1. For each turbine j in the farm, an averaged value of the turbine-level variable Vj is calculated over the NWj samples present in the analysis window Win:
k

it combines a mono-turbine (or turbine-level) step with a multi-turbine (or farm-level) step. To the best of the authors¡¯ knowledge, no other existing and published method proposes to compare online in real-time the prediction residual gener- ated on a given turbine to a farm reference synthesized from the prediction residuals generated on the neighbor turbines.

Fig. 1. Multi-turbine approach: generic principle for the synthesis of fault indicator Fj for wind turbine j. The choice of the variable V as a mono-turbine residual corresponds to the combined mono- and multi-turbine method proposed in this paper.




the number of samples NWj is smaller than NWL, V j(k) is not computed as it would not be representative enough.
2. The fleet reference V fleet (k) is calculated using the averaged values V j(k) at the turbine level, as follows:

The fleet reference is calculated using the median and not the mean, so as to make it insensitive to abnormal values generated by faulty turbines. For the practical implemen- tation, the fleet reference is computed if the number of averaged values V j(k) computed at time k is higher than a limit number NTL (i.e. information is available from enough turbines) and the reference should be representative of the farm normal conditions as long as more than half of the turbines used to calculate the reference operate in normal conditions.
3. A fault indicator Fj(k) is then calculated for each turbine j as the distance between the monitored variable Vj(k) and the

In practice, NWL  is set to  W  + 1, which means that the variable  V j(k) should be available during at least half the analysis window W . NTL is set to NT  1 , which means that V j(k) should be available for more than half the turbines of the farm for the fleet reference   to be computed.
2.1.2. Synthesis of a turbine-level variable for comparison to the fleet reference
At the turbine level, the variable V used to create the fault indicator may be of two kinds: it can be either a residual generated as the difference between a measured value of SCADA variable and its prediction by a normal behavior model, or in a more straight- forward way, it can be directly a measured SCADA variable, Fig. 1.
The variable V may be a residual, computed as the difference between a SCADA variable and its prediction by a normal behavior model. In this paper, in the same logic as using a component temperature as a fault indicator, the difference between the measured temperature of a component and its temperature predicted by a physics-related model is used. In the generator, the active power produced by the turbine, the rotation speed of the drive shaft, and the nacelle temper- ature can account for a change in a component temperature.

So a linear model relating these variables to the component temperature is proposed, Eq. (4)

with Tj(k) the component predicted temperature, Pj(k) the active power produced, ?j(k) the shaft rotation speed, Tnacellej
(k) the nacelle temperature, recorded by the SCADA system
and a, b, c and d constant parameters. To built a normal behavior model, the parameters a, b, c and d of the model are regression coefficients learnt using a classical least squares algorithm [2], on data gathered during periods when the turbine is operating under normal conditions. The variable V is then taken equal to the temperature residual Rs taken as the difference between the actual measured temperature and its predicted value, i.e. for turbine j at time k:

The normal behavior model (4) expresses normal tempera- ture variations due to the turbine producing electric power. Thus, the model is valid only when the turbine is in operat- ing conditions and, for the practical implementation, all the samples gathered when the power produced by the turbine is below a production threshold Thp , i.e. when the turbine is stopped, are removed from the analysis window Win.
This hybrid ¡®¡®mono-multi-turbine¡¯¡¯ approach consisting in generating a fault indicator by comparing the residual gen- erated for each (¡®¡®mono¡¯¡¯) turbine to a (¡®¡®multi-turbine¡¯¡¯) farm reference is the original fault indicator synthesis proposed and defended in this paper for its good performance and lower sensitivity to both internal (operating conditions) and external (environmental variations) influences. The main steps for the implementation of this fault indicator synthesis are sketched in Algorithm 1.
In a more direct way, the variable V may be a SCADA variable, relevant in itself as a fault indicator, such as a component temperature. As seen in the literature -e.g. [18,31]-, compo- nent temperatures are commonly used as fault indicators. An overheating component can be the sign of a mechanical prob- lem or of a cooling system failure. In this case, the variable V is taken as the monitored temperature T of a considered component, i.e. for turbine j at time k:

Reading or sensors errors may affect SCADA measures. Thus, in the practical implementation of this fault indicator, any temperature value outside an acceptable range is removed from the analysis window Win.
This approach based on the direct comparison of SCADA data of each individual turbine to a farm reference has already been proposed and assessed in [34] for temperature mea- surements, and extended to other kinds of measurements in [35]: it has been proved too sensitive to the influence of possibly different operating conditions between each indi- vidual turbine. It is considered in this paper for comparison purposes with the proposed combined mono- and multi- turbine method.


Algorihm 1: General algorithm for the combined mono- and multi-turbine fault indicator generation


Phase 1 - Offline learning phase

Phase 2 - Online implementation phase 

2.1.3. Fault detection based on the generated fault indicators
The occurrence of a fault on wind turbine j leads to a change in the corresponding fault indicator Fj. Ideally, a fault indicator should be sensitive to a fault occurrence, but insensitive to the vari- ations of the farm environment and of the wind turbine operating conditions: building such a fault indicator was the motivation to propose a combined ¡®¡®mono-multi-turbine¡¯¡¯ approach. Under these assumptions, the statistical properties, in particular the expected value, of the fault indicator Fj changes with a fault occurrence, and the fault detection can be performed using statistical hypothesis testing tools (e.g. testing  hypothesis H0	E(Fj)	?0j vs. H1 E(Fj)	?0j), and can be implemented by setting a threshold on Fj. In theory, in this classical setting, when no information is available on the properties of the fault indicator Fj in presence of a fault, the value of this threshold can be determined using the estimated or assumed statistical properties of Fj when no fault is present in order
to guarantee, for example, a false alarm rate. In our approach, we want to avoid any additional hypothesis on the distribution of Fj under the ¡®¡®no fault ¡¯¡¯ assumption, which could be different for each turbine and could possibly lead to a different threshold for each turbine. Consequently, in the following, our approach is to set the detection threshold for the whole wind farm, on the basis of the whole available historical 4-years database for the farm in order to get a given false alarm level.

2.2. Performance evaluation indicators

Fault indicators are to be used in wind farms to assist mainte- nance operators. They should allow the detection of faults occur- ring on a wind turbine without generating too many false alarms. However, in the literature on wind turbine fault indicators, no paper addresses the issue of the performance evaluation of the indicators proposed. Most of them merely report the ability of their indicator to detect a particular fault. In this paper, we chose to evaluate the fault indicators proposed from a wind farm produc- tion managers point of view. Fault indicators should definitely be able to detect faults on wind turbines, to avoid a major degradation and then a costly repair. However, they should be able to do it early enough for a maintenance operation to be scheduled. Another major issue is the cost of false alarms. A false alarm results in a useless maintenance action: a maintenance team has to be sent to the production site to inspect the supposedly faulty turbine. Because wind turbines are usually located in remote sites, the inspection takes time and consequently costs a lot of money. So, in this paper, we propose 3 performance evaluation indicators, able to make a fair and objective assessment of the indicator usefulness: the detection time before failure, the useless maintenance action number and the indicator persistence, which gives to the operator some indications about the relevance and performance of the fault detection process based on the proposed indicator.
Performance evaluation indicators are computed from a data base gathered on a wind farm during a period of length D, where faults occurred. The data base is previously split into normal con- ditions periods and faulty periods. A normal conditions period is a period of time where no fault occurred on a wind turbine. A faulty period is a period of time where a fault was continuously present on a turbine. It ends when the failure occurs, i.e. when the turbine stops functioning.
Let Th be a detection threshold, set on the fault indicators Fj(k). When the indicator exceeds Th, an alarm is raised. Th is set for the whole wind farm, i.e. the same value is set for all the turbines fault indicators, Fj(k) .

2.2.1. Detection time before failure
The detection time before failure measures the time separating the first time the fault indicator exceeded the detection threshold Th during a faulty period from the failure time, i.e. the end of the faulty period. It gives an estimation of the time left to the maintenance team to repair the fault before the failure.

2.2.2. Number of useless maintenance actions
A false alarm occurs when the fault indicator exceeds the de- tection threshold Th during a normal conditions period. The false alarm rate is converted into an equivalent ¡®¡®number of useless maintenance actions¡¯¡¯ so as to better consider its cost. A ¡®¡®false alarm day¡¯¡¯ is a day when at least one false alarm occurred on at least one of the turbines. A ¡®¡®false alarm period¡¯¡¯ is a period made of consecutive false alarm days. The shorter possible length for a false alarm period is one day. During a false alarm period, a maintenance team has to be sent once to the wind farm location. So each false alarm period results in a useless maintenance action. The useless maintenance action number is the number of times a maintenance team has to be sent to the wind farm during the period D; it is equal to the number of false alarm periods.

2.2.3. Indicator persistence
The persistence measures the percentage of time during which the fault indicator remains above the detection threshold Th during a faulty period. A persisting indicator makes the maintenance operator more confident in the occurrence of the fault than an indicator constantly being set on and off.

3. Results and discussion

3.1. Data base

The methods presented in Section 2 are applied on a set of real data, gathered on a French wind farm located in the south of France. The 6 wind turbines forming the farm are identical. They are of the same make, conceived to produce 2 MW, with a horizontal axis. SCADA data were recorded every 10 min during 4 years, from November 2009 till December 2013.
During this 4 years, 6 single faults affecting the generator oc- curred on different turbines at different times, some of them gen- erating a major failure and, consequently, the machine shutdown for several weeks, see Fig. 2:
Fault on two bearings: 2 bearings broke down on 2 genera- tors, because of a lack of lubrification. One of the generators had to be replaced. These 2 episodes are named ¡®¡®faulty bear- ing WT6 (FB_WT6)¡¯¡¯ and ¡®¡®faulty bearing WT9 (FB_WT9)¡¯¡¯, for faulty bearing on wind turbines 6 and 9.
? Faults on two stator windings: two generators were stopped

The residual Rsj(k) is generated using Eq. (5), with Tj the predicted bearing or stator temperature using the normal behavior model in Eq. (4). The temperature variations due to changes in the power production are accounted for by the model. The model is learnt for each turbine, during a normal conditions period of two months at the beginning of the 4 years recording. Whenever a fault occurs on a turbine, the turbine model is learnt just after the necessary repair is made, on a fixed period of 2 months.

This model residual Rsj(k) is then averaged to obtained Rsj(k), using Eqs. (1) with Vj Rsj ;
The average residual Rsj(k) is finally compared to the fleet reference Rsfleet (k) computed using Eq. (2) with the averaged residuals from all the turbines, to obtain the fault indicator RESmultij (k).
3.2.2. Implementation of classical fault detection indicators for com- parison
   For each turbine j, three other fault indicators are considered: two of them are generated using a mono-turbine approach, the third one is generated by a simple multi-turbine comparison of the raw measurements (no residual generation at the turbine level).
The two indicators Tmonoj (directly based on raw measure- ments) and RESmonoj (based on residuals) are implemented following a classical mono-turbine approach, i.e. using SCADA data recorded from the turbine j alone:


an over-heating period which damaged the winding insu- lating material. The generators had to be replaced. These episodes are named ¡®¡®faulty winding WT9 (FW_WT9)¡¯¡¯ and ¡®¡®faulty winding WT11 (FW_WT11)¡¯¡¯.
? Faults on two cooling systems: a fault occurred on the cooling

either the bearing temperature or the stator tempera- ture.
In this case, the SCADA temperature is averaged over
24 h and thresholded, in a way very similar to the traditional SCADA detection system.
loose. These episodes are named ¡®¡®faulty cooling system WT7 (FCS_WT7)¡¯¡¯ and ¡®¡®faulty cooling system WT10 (FCS_WT10)¡¯¡¯.
The SCADA data used to implement and compute the fault indicators are the bearing temperatures, the stator temperatures, the nacelle temperatures, the active power produced and the shaft rotational speed on the 6 turbines.

3.2. Implementation of fault indicators
Four fault indicators are implemented and compared using the performance evaluation indicators presented in Section 2.2 calculated on the 4 years of data: the first considered fault indicator corresponds to the proposed combined mono- and multi-turbine approach, the three others are more classical and are implemented for comparison purposes. Each fault indicator is calculated every 10 min, using a sliding window of size W 144 samples, i.e.
24 h. NWL  is thus set to 72 and NTL  to 4. When relevant, the    limit production threshold Thp, above which the temperature can be predicted, is set to 50 kW, mainly because production levels below 50 kW correspond to starting or shutting down transient behaviors. In the following, depending on the considered fault to monitor, Tj can be either the bearing temperature or the stator temperature.

3.2.1. Implementation of the proposed combined mono- and multi- turbine approach	     	     
The indicator Rsfleet (k) is computed for each turbine j, following the proposed combined mono- and multi- turbine approach, see Algorithm 1:

Tj(k) Tj(k) where Tj can be either the bearing temper- ature or the stator temperature.
In this case, the residual generated using Eq. (5) and the model in Eq. (4) is averaged and thresholded. The temperature variations due to changes in the power production are accounted for by the model. The model is learnt for each turbine, during a normal conditions period of two months at the beginning of the 4 years recording. Whenever a fault occurs on a turbine, the turbine model is learnt just after the necessary repair is made, on a fixed period of 2 months.
An indicator Tmultij (directly based on measurements) is im- plemented using a multi-turbine approach, using a fleet ref- erence

	
¨C Tmultij (k)   T j(k)   T fleet (k), using Eqs. (1) and (2) with Vj Tj, where Tj is the bearing temperature or the stator temperature. The component temperature is averaged and compared to the fleet averaged temperature refer- ence.

3.3. Performance results

Fig. 3 shows the evolution of the 4 fault indicators during the four years when the SCADA data were recorded on the 6 turbines of the wind farm. The upper figures display the evolution of the mono-turbine indicators (temperatures on the left, residuals on the right), the lower figures the multi-turbine indicators (temper- atures on the left, residuals on the right). The detection thresholds corresponding to a useless maintenance action number of 10, 20 and 30 (i.e. a total of 10, 20 or 30 useless maintenance actions

Fig. 2. Occurrence of failures and ¡®¡®failure periods¡¯¡¯ on the 6 wind turbines of the considered farm during the 4 years recorded database - Bearing failures in red, cooling system failures in green and windings failures in blue. (For interpretation of the references to colour in this figure legend, the reader is referred to the web version of this article.)

Fig. 3. Evolution of the 4 indicators for the 6 wind turbines over the 4-years period. The colored shaded areas correspond to the failure periods shown in Fig. 2. (For interpretation of the references to colour in this figure legend, the reader is referred to the web version of this article. will be generated on the whole farm during 4 years) are also displayed. The faulty periods are delimited by vertical lines. The five faulty periods correspond to the following faults, in chronolog- ical order: FB_WT6, FB_WT9, FCS_WT7, FW_WT11 and FCS_WT10 and FW_WT9 during the same faulty period. One can see that the seasonal variations inducing a change in the external temperatures are visible on the mono-turbine fault indicators. Both the tempera- tures and residuals are higher in summer and lower in winter. The fault indicators monitoring the 6 turbines follow the same pattern. During faulty periods, abnormal increases in temperatures can be seen on the faulty turbines. However, the temperature increases are somehow buried in the variations observed in the temper- atures during normal conditions periods. The faulty indicator to normal indicator contrast ratio (defined in a similar way as a signal to noise ratio: the energy of the indicator during a faulty period on the energy of the indicator during a normal condition period) is rather low, which makes the detection of the fault with a minimum amount of false alarms using Tmonoj quite difficult. The evolution of RESmonoj is rather similar. Since it is a residual, its evolution varies around 0. Its standard deviation is reduced compared to Tmonoj since the variations in temperature due to the change in power production are accounted for by the model and thus removed but its mean remains affected by seasonal temperature variations. Abnormal changes due to faults are more visible on the indicators but the fault detection using a fixed detection threshold seems still difficult to do.
The use of a multi-turbine approach makes it possible to remove the external temperature variations (seasonal effects) affecting the mono turbine indicators since the temperature variations are also present in the fleet reference and  consequently  subtracted  from the residuals. The faulty indicator to normal indicator contrast ratio seems to be increased and it is all the more so when RESmultij  is used, since the residual is rid of variations due to external temper- ature changes and variations due to changes in power production. Whenever a fault occurs on a turbine, it is preceded by an increase in the corresponding turbine residual, which clearly stands out from the other residuals. A fault detection strategy using a fixed detection threshold seems much more feasible.

Fig. 4. Performance characteristics curves: advance detection time as a function of the number of useless maintenance interventions for 6 different faults: FB_WT6, FB_WT9, FCS_WT7, FW_WT11, FCS_WT10, FW_WT9.

To compare the four indicators performances, two performance curves plotting the persistence or the detection time before failure as a function of the useless maintenance action numbers are built for each of the 6 faults. The curves are similar to traditional ROC curves, [37]. For a given value of the detection threshold, the detec- tion time before failure (advance detection time), the persistence and the useless maintenance action number are calculated and form a point in the performance curves.
The two performances curves are displayed in Figs. 4 and 5. The performance curves of multi-turbine indicators based detection are displayed in plain lines and mono-turbine ones in dotted lines. One can see that for the faults FB_WT6, FB_WT9, FW_WT11 and FW_WT9, the detection implemented with multi-turbine indica- tors outperforms the detection based on the mono-turbine ones, as could be expected from Fig. 3. Using these multi-turbine indicators allows detecting the faults earlier with a reduced number of useless maintenance actions. If the detection threshold is set at its highest value, i.e. set to obtain zero useless maintenance actions, with RESmultij  it is still possible to detect all the faults at least 500 min
ahead of time i.e. about 4 days. If the threshold is decreased to allow
3 useless maintenance actions, the faults can be detected as early as 1200 min ahead of time i.e. about 8 days, which is sufficient to plan a maintenance intervention. When mono-turbine indicators are used, FB_WT6 and FW_WT11, two major faults, cannot be detected. The detection time before failure remains close to zero whatever the value of the detection threshold. FB_WT9 and FW_WT9 can be detected two weeks ahead of time, with RESmono or Tmono, but at the very high cost of more than 15 useless maintenance actions. The two faults where the mono-turbine indicators performances equal the multi-turbine indicators are the faults on the cooling systems, FCS_WT7 and FCS_WT10, which occurred suddenly and generated a sudden and large increase in the recorded temperature.
The detection time before failure as a function of the useless maintenance action number curves show that RESmultij performs slightly better than Tmultij . The performances are comparable on

FB_WT6, FW_WT9, FCS_WT11, FCS_WT7 and FCS_WT10 but improved with RESmultij on FB_WT9. However, the persistence as a function of the useless maintenance action numbers curves shows
the superiority of RESmultij . Indeed, even if the detection time be- fore failure is equivalent, the persistence is globally higher when RESmultij is used. This is an important criterion because the higher the persistence is, the higher the confidence the operator may have in the indicator. Based on this criterion, RESmultij clearly outper- forms all the other fault indicators on the considered real data set, especially the mono-turbine ones. This is illustrated in Fig. 6 where a zoom in time is made on the period preceding FB_WT9. Indicators are presented in the same order as in Fig. 3. The colored lines are the detection thresholds which set the number of useless maintenance actions at 10, 20 or 30. Their value is adapted to each indicator. One can see that, though a slight increase in Tmonoj can be visually observed during the period preceding the fault, this increase cannot be detected with a fixed threshold. RESmonoj can detect the fault but only because it exceeds the detection threshold for a very short period of time. This could be figured out from the persistence curve whose value remained close to zero. On the contrary, the multi-turbines indicators show an obvious increase, which can be easily detected. The fault symptom appears earlier in RESmultij and the indicator remains more often above the detection threshold, which results in a higher persistence.

4. Conclusion

In this paper, we propose a new hybrid multi-level strategy to build fault indicators to monitor turbines within a wind farm, following a combined mono- and multi-turbine approach. The approach proposed reduces the effect of changes in the operational and environmental conditions on the fault indicators. Residuals computed from a mono-turbine model are compared to a fleet reference residual to form a multi-turbine fault indicator. The mono-turbine residuals are less sensitive to the internal variations because the SCADA temperatures are first processed using a model explaining the variations of the temperature in function of the operational conditions. Rises in the temperature due to increases in the power produced or in the rotational speed are accounted for by the model and removed from the residuals. The mono-turbine residuals are further post processed in a multi-turbine approach, which enables the impact of the variations in the environmental conditions to be reduced. Indeed, turbines in a same wind farm are part of a fleet. They are of the same make and model, and their variables evolve in a similar way since they are submitted to the same environmental conditions. New performance evaluation criteria were proposed to analyze the indicator performances for fault detection purpose, keeping in mind the cost of any useless maintenance action. The performance of the combined mono- and multi-turbine fault indicators were compared to more tradi- tional mono-turbine indicators on a data base made of SCADA data recorded every ten minutes from a real wind farm on a four year period. As far as we know, this is the first time a paper presents such an extensive analysis of fault indicators performance for fault detection, on real data with a wind farm production manager point of view. The results clearly showed that the effects of changes in both environmental and operational conditions on the combined mono- and multi-turbine residuals were reduced during the fault- free periods. This results in the combined mono- and multi-turbine fault indicators being able to detect all the faults occurring on the farm with a limited number of useless maintenance interventions and with an increased persistence.

